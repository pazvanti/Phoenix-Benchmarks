
import java.io.IOException;
import com.fizzed.rocker.ForIterator;
import com.fizzed.rocker.RenderingException;
import com.fizzed.rocker.RockerContent;
import com.fizzed.rocker.RockerOutput;
import com.fizzed.rocker.runtime.DefaultRockerTemplate;
import com.fizzed.rocker.runtime.PlainTextUnloadedClassLoader;
// import @ [1:1]
import org.example.model.*;
// import @ [2:1]
import java.util.List;

/*
 * Auto generated code to render template /stocks.rocker.html
 * Do not edit this file. Changes will eventually be overwritten by Rocker parser!
 */
@SuppressWarnings("unused")
public class stocks extends com.fizzed.rocker.runtime.DefaultRockerModel {

    static public com.fizzed.rocker.ContentType getContentType() { return com.fizzed.rocker.ContentType.HTML; }
    static public String getTemplateName() { return "stocks.rocker.html"; }
    static public String getTemplatePackageName() { return ""; }
    static public String getHeaderHash() { return "-1287412987"; }
    static public String[] getArgumentNames() { return new String[] { "items" }; }

    // argument @ [3:2]
    private List<Stock> items;

    public stocks items(List<Stock> items) {
        this.items = items;
        return this;
    }

    public List<Stock> items() {
        return this.items;
    }

    static public stocks template(List<Stock> items) {
        return new stocks()
            .items(items);
    }

    @Override
    protected DefaultRockerTemplate buildTemplate() throws RenderingException {
        // optimized for performance (via rocker.optimize flag; no auto reloading)
        return new Template(this);
    }

    static public class Template extends com.fizzed.rocker.runtime.DefaultRockerTemplate {

        // <!DOCTYPE html>\n<html>\n<head>\n<title>Stock Prices</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<meta http-equiv=\"Content-Style-Type\" content=\"text/css\" />\n<meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\" />\n<link rel=\"shortcut icon\" href=\"/images/favicon.ico\" />\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/style.css\" media=\"all\" />\n<script type=\"text/javascript\" src=\"/js/util.js\"></script>\n<style type=...
        static private final byte[] PLAIN_TEXT_0_0;
        // \t\t\t<tr class=\"
        static private final byte[] PLAIN_TEXT_1_0;
        // odd
        static private final byte[] PLAIN_TEXT_2_0;
        // even
        static private final byte[] PLAIN_TEXT_3_0;
        // \">\n\t\t\t\t<td>
        static private final byte[] PLAIN_TEXT_4_0;
        // </td>\n\t\t\t\t<td><a href=\"/stocks/
        static private final byte[] PLAIN_TEXT_5_0;
        // \">
        static private final byte[] PLAIN_TEXT_6_0;
        // </a></td>\n\t\t\t\t<td><a href=\"
        static private final byte[] PLAIN_TEXT_7_0;
        // </a></td>\n\t\t\t\t<td><strong>
        static private final byte[] PLAIN_TEXT_8_0;
        // </strong></td>
        static private final byte[] PLAIN_TEXT_9_0;
        // \n\t\t\t\t<td class=\"minus\">
        static private final byte[] PLAIN_TEXT_10_0;
        // </td>\n\t\t\t\t<td class=\"minus\">
        static private final byte[] PLAIN_TEXT_11_0;
        // </td>
        static private final byte[] PLAIN_TEXT_12_0;
        // \n\t\t\t\t<td>
        static private final byte[] PLAIN_TEXT_13_0;
        // </td>\n\t\t\t\t<td>
        static private final byte[] PLAIN_TEXT_14_0;
        // \n\t\t\t</tr>\n
        static private final byte[] PLAIN_TEXT_15_0;
        // \t\t</tbody>\n\t</table>\n\n</body>\n</html>\n
        static private final byte[] PLAIN_TEXT_16_0;

        static {
            PlainTextUnloadedClassLoader loader = PlainTextUnloadedClassLoader.tryLoad(stocks.class.getClassLoader(), stocks.class.getName() + "$PlainText", "UTF-8");
            PLAIN_TEXT_0_0 = loader.tryGet("PLAIN_TEXT_0_0");
            PLAIN_TEXT_1_0 = loader.tryGet("PLAIN_TEXT_1_0");
            PLAIN_TEXT_2_0 = loader.tryGet("PLAIN_TEXT_2_0");
            PLAIN_TEXT_3_0 = loader.tryGet("PLAIN_TEXT_3_0");
            PLAIN_TEXT_4_0 = loader.tryGet("PLAIN_TEXT_4_0");
            PLAIN_TEXT_5_0 = loader.tryGet("PLAIN_TEXT_5_0");
            PLAIN_TEXT_6_0 = loader.tryGet("PLAIN_TEXT_6_0");
            PLAIN_TEXT_7_0 = loader.tryGet("PLAIN_TEXT_7_0");
            PLAIN_TEXT_8_0 = loader.tryGet("PLAIN_TEXT_8_0");
            PLAIN_TEXT_9_0 = loader.tryGet("PLAIN_TEXT_9_0");
            PLAIN_TEXT_10_0 = loader.tryGet("PLAIN_TEXT_10_0");
            PLAIN_TEXT_11_0 = loader.tryGet("PLAIN_TEXT_11_0");
            PLAIN_TEXT_12_0 = loader.tryGet("PLAIN_TEXT_12_0");
            PLAIN_TEXT_13_0 = loader.tryGet("PLAIN_TEXT_13_0");
            PLAIN_TEXT_14_0 = loader.tryGet("PLAIN_TEXT_14_0");
            PLAIN_TEXT_15_0 = loader.tryGet("PLAIN_TEXT_15_0");
            PLAIN_TEXT_16_0 = loader.tryGet("PLAIN_TEXT_16_0");
        }

        // argument @ [3:2]
        protected final List<Stock> items;

        public Template(stocks model) {
            super(model);
            __internal.setCharset("UTF-8");
            __internal.setContentType(getContentType());
            __internal.setTemplateName(getTemplateName());
            __internal.setTemplatePackageName(getTemplatePackageName());
            this.items = model.items();
        }

        @Override
        protected void __doRender() throws IOException, RenderingException {
            // PlainText @ [3:26]
            __internal.aboutToExecutePosInTemplate(3, 26);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // ForBlockBegin @ [59:4]
            __internal.aboutToExecutePosInTemplate(59, 4);
            try {
                final com.fizzed.rocker.runtime.IterableForIterator<Stock> __forIterator0 = new com.fizzed.rocker.runtime.IterableForIterator<Stock>(items);
                while (__forIterator0.hasNext()) {
                    final com.fizzed.rocker.ForIterator i = __forIterator0;
                    final Stock item = __forIterator0.next();
                    try {
                        // PlainText @ [59:48]
                        __internal.aboutToExecutePosInTemplate(59, 48);
                        __internal.writeValue(PLAIN_TEXT_1_0);
                        // IfBlockBegin @ [60:15]
                        __internal.aboutToExecutePosInTemplate(60, 15);
                        if (i.index() % 2 == 0) {
                            // PlainText @ [60:41]
                            __internal.aboutToExecutePosInTemplate(60, 41);
                            __internal.writeValue(PLAIN_TEXT_2_0);
                            // IfBlockElse @ [60:44]
                            __internal.aboutToExecutePosInTemplate(60, 44);
                        } else { // else @ [60:44]
                            // PlainText @ [60:52]
                            __internal.aboutToExecutePosInTemplate(60, 52);
                            __internal.writeValue(PLAIN_TEXT_3_0);
                            // IfBlockEnd @ [60:15]
                            __internal.aboutToExecutePosInTemplate(60, 15);
                        } // if end @ [60:15]
                        // PlainText @ [60:57]
                        __internal.aboutToExecutePosInTemplate(60, 57);
                        __internal.writeValue(PLAIN_TEXT_4_0);
                        // ValueExpression @ [61:9]
                        __internal.aboutToExecutePosInTemplate(61, 9);
                        __internal.renderValue(Integer.toString(i.index()+1), false);
                        // PlainText @ [61:39]
                        __internal.aboutToExecutePosInTemplate(61, 39);
                        __internal.writeValue(PLAIN_TEXT_5_0);
                        // ValueExpression @ [62:26]
                        __internal.aboutToExecutePosInTemplate(62, 26);
                        __internal.renderValue(item.getSymbol(), false);
                        // PlainText @ [62:43]
                        __internal.aboutToExecutePosInTemplate(62, 43);
                        __internal.writeValue(PLAIN_TEXT_6_0);
                        // ValueExpression @ [62:45]
                        __internal.aboutToExecutePosInTemplate(62, 45);
                        __internal.renderValue(item.getSymbol(), false);
                        // PlainText @ [62:62]
                        __internal.aboutToExecutePosInTemplate(62, 62);
                        __internal.writeValue(PLAIN_TEXT_7_0);
                        // ValueExpression @ [63:18]
                        __internal.aboutToExecutePosInTemplate(63, 18);
                        __internal.renderValue(item.getUrl(), false);
                        // PlainText @ [63:32]
                        __internal.aboutToExecutePosInTemplate(63, 32);
                        __internal.writeValue(PLAIN_TEXT_6_0);
                        // ValueExpression @ [63:34]
                        __internal.aboutToExecutePosInTemplate(63, 34);
                        __internal.renderValue(item.getName(), false);
                        // PlainText @ [63:49]
                        __internal.aboutToExecutePosInTemplate(63, 49);
                        __internal.writeValue(PLAIN_TEXT_8_0);
                        // ValueExpression @ [64:17]
                        __internal.aboutToExecutePosInTemplate(64, 17);
                        __internal.renderValue(item.getPrice(), false);
                        // PlainText @ [64:33]
                        __internal.aboutToExecutePosInTemplate(64, 33);
                        __internal.writeValue(PLAIN_TEXT_9_0);
                        // IfBlockBegin @ [64:47]
                        __internal.aboutToExecutePosInTemplate(64, 47);
                        if (item.getChange() < 0.0) {
                            // PlainText @ [64:77]
                            __internal.aboutToExecutePosInTemplate(64, 77);
                            __internal.writeValue(PLAIN_TEXT_10_0);
                            // ValueExpression @ [65:23]
                            __internal.aboutToExecutePosInTemplate(65, 23);
                            __internal.renderValue(item.getChange(), false);
                            // PlainText @ [65:40]
                            __internal.aboutToExecutePosInTemplate(65, 40);
                            __internal.writeValue(PLAIN_TEXT_11_0);
                            // ValueExpression @ [66:23]
                            __internal.aboutToExecutePosInTemplate(66, 23);
                            __internal.renderValue(item.getRatio(), false);
                            // PlainText @ [66:39]
                            __internal.aboutToExecutePosInTemplate(66, 39);
                            __internal.writeValue(PLAIN_TEXT_12_0);
                            // IfBlockElse @ [66:44]
                            __internal.aboutToExecutePosInTemplate(66, 44);
                        } else { // else @ [66:44]
                            // PlainText @ [66:52]
                            __internal.aboutToExecutePosInTemplate(66, 52);
                            __internal.writeValue(PLAIN_TEXT_13_0);
                            // ValueExpression @ [67:9]
                            __internal.aboutToExecutePosInTemplate(67, 9);
                            __internal.renderValue(item.getChange(), false);
                            // PlainText @ [67:26]
                            __internal.aboutToExecutePosInTemplate(67, 26);
                            __internal.writeValue(PLAIN_TEXT_14_0);
                            // ValueExpression @ [68:9]
                            __internal.aboutToExecutePosInTemplate(68, 9);
                            __internal.renderValue(item.getRatio(), false);
                            // PlainText @ [68:25]
                            __internal.aboutToExecutePosInTemplate(68, 25);
                            __internal.writeValue(PLAIN_TEXT_12_0);
                            // IfBlockEnd @ [64:47]
                            __internal.aboutToExecutePosInTemplate(64, 47);
                        } // if end @ [64:47]
                        // PlainText @ [68:31]
                        __internal.aboutToExecutePosInTemplate(68, 31);
                        __internal.writeValue(PLAIN_TEXT_15_0);
                        // ForBlockEnd @ [59:4]
                        __internal.aboutToExecutePosInTemplate(59, 4);
                    } catch (com.fizzed.rocker.runtime.ContinueException e) {
                        // support for continuing for loops
                    }
                } // for end @ [59:4]
            } catch (com.fizzed.rocker.runtime.BreakException e) {
                // support for breaking for loops
            }
            // PlainText @ [70:5]
            __internal.aboutToExecutePosInTemplate(70, 5);
            __internal.writeValue(PLAIN_TEXT_16_0);
        }
    }

    private static class PlainText {

        static private final String PLAIN_TEXT_0_0 = "<!DOCTYPE html>\n<html>\n<head>\n<title>Stock Prices</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<meta http-equiv=\"Content-Style-Type\" content=\"text/css\" />\n<meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\" />\n<link rel=\"shortcut icon\" href=\"/images/favicon.ico\" />\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/style.css\" media=\"all\" />\n<script type=\"text/javascript\" src=\"/js/util.js\"></script>\n<style type=\"text/css\">\n/*<![CDATA[*/\nbody {\n\tcolor: #333333;\n\tline-height: 150%;\n}\n\nthead {\n\tfont-weight: bold;\n\tbackground-color: #CCCCCC;\n}\n\n.odd {\n\tbackground-color: #FFCCCC;\n}\n\n.even {\n\tbackground-color: #CCCCFF;\n}\n\n.minus {\n\tcolor: #FF0000;\n}\n\n/*]]>*/\n</style>\n\n</head>\n\n<body>\n\n\t<h1>Stock Prices</h1>\n\n\t<table>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>#</th>\n\t\t\t\t<th>symbol</th>\n\t\t\t\t<th>name</th>\n\t\t\t\t<th>price</th>\n\t\t\t\t<th>change</th>\n\t\t\t\t<th>ratio</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n";
        static private final String PLAIN_TEXT_1_0 = "\t\t\t<tr class=\"";
        static private final String PLAIN_TEXT_2_0 = "odd";
        static private final String PLAIN_TEXT_3_0 = "even";
        static private final String PLAIN_TEXT_4_0 = "\">\n\t\t\t\t<td>";
        static private final String PLAIN_TEXT_5_0 = "</td>\n\t\t\t\t<td><a href=\"/stocks/";
        static private final String PLAIN_TEXT_6_0 = "\">";
        static private final String PLAIN_TEXT_7_0 = "</a></td>\n\t\t\t\t<td><a href=\"";
        static private final String PLAIN_TEXT_8_0 = "</a></td>\n\t\t\t\t<td><strong>";
        static private final String PLAIN_TEXT_9_0 = "</strong></td>";
        static private final String PLAIN_TEXT_10_0 = "\n\t\t\t\t<td class=\"minus\">";
        static private final String PLAIN_TEXT_11_0 = "</td>\n\t\t\t\t<td class=\"minus\">";
        static private final String PLAIN_TEXT_12_0 = "</td>";
        static private final String PLAIN_TEXT_13_0 = "\n\t\t\t\t<td>";
        static private final String PLAIN_TEXT_14_0 = "</td>\n\t\t\t\t<td>";
        static private final String PLAIN_TEXT_15_0 = "\n\t\t\t</tr>\n";
        static private final String PLAIN_TEXT_16_0 = "\t\t</tbody>\n\t</table>\n\n</body>\n</html>\n";

    }

}
